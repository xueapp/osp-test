# Nginx is needed to route requests from the web user to the reverse proxy on the frontend...
# ...for eventual proxying to the individual services in the microservices network.
# docker-compose will create a default bridge network for all the containers...
# ...so no need for a 'networks' key.
# Publishing the host ports for the microservices was necessary due to requests made from the browser.
# Otherwise, if only internal ports are published, we can only talk to a container from within another container.

version: '3'
services:
  frontend:
    # Use image built from the Dockerfile in /frontend dir.
    build: './frontend'

    container_name: 'frontend'

    # Bind container and host machine to exposed port, 3000.
    ports:
      - '3000:3000'

    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'

  books:
    build: './books'

    container_name: 'books'

    ports:
      - '8888:8888'

    depends_on:
      - frontend

    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'

  customers:
    build: './customers'

    container_name: 'customers'

    ports:
      - '5555:5555'

    depends_on:
      - frontend

    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'

  orders:
    build: './orders'

    container_name: 'orders'

    ports:
      - '7777:7777'

    depends_on:
      - frontend

    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'

  nginx:
    # Use latest version of the public nginx image.
    image: nginx:latest

    container_name: 'production_nginx'

    ports:
      - '8080:8080'

    volumes:
      - './frontend:/srv/www/static'
      - './default.conf:/etc/nginx/conf.d/default.conf'

    depends_on:
      - frontend
      - books
      - customers
      - orders
